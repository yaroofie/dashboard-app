// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("POSTGRES_PRISMA_URL")
// }

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String             @id @default(cuid())
  name           String
  email          String           @unique
  password       String
  isAdmin        Boolean?          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

// model User {
//   id             Int              @id @default(autoincrement())
//   name           String
//   email          String           @unique
//   password       String
//   jobTitle       String
//   location       String
//   socialLinks    SocialLinks      @relation(fields: [socialLinksId], references: [id])
//   workExperience WorkExperience[]
//   education      Education[]
//   skills         Skill[]
//   createdAt      DateTime         @default(now())
//   updatedAt      DateTime         @updatedAt
//   socialLinksId  Int
// }

// model SocialLinks {
//   id       Int     @id @default(autoincrement())
//   github   String? // Optional in case it's not always available
//   linkedin String?
//   email    String?
//   website  String?
//   User     User[]
// }

// model WorkExperience {
//   id           Int       @id @default(autoincrement())
//   company      String
//   position     String
//   startDate    DateTime
//   endDate      DateTime?
//   description  String[]
//   achievements String[]
//   User         User?     @relation(fields: [userId], references: [id])
//   userId       Int?
// }

// model Education {
//   id           Int       @id @default(autoincrement())
//   institution  String
//   degree       String
//   fieldOfStudy String
//   startDate    DateTime
//   endDate      DateTime?
//   User         User?     @relation(fields: [userId], references: [id])
//   userId       Int?
// }

// model Skill {
//   id               Int    @id @default(autoincrement())
//   name             String
//   category         String // e.g., "Technical", "Design", etc.
//   proficiencyLevel String // e.g., "Advanced", "Intermediate"
//   User             User?  @relation(fields: [userId], references: [id])
//   userId           Int?
// }
