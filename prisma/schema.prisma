// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

// datasource db {
//   provider = "postgresql"
//   url      = env("POSTGRES_PRISMA_URL")
// }

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(cuid())
  
  username       String           @unique
  password       String
  email          String?           @unique
  
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  name           String?
  isAdmin        Boolean?         @default(false)
  
  jobTitle       String?
  location       String?
  
  socialLinks    SocialLinks[]
  workExperience WorkExperience[]
  education      Education[]
  skills         Skill[]
}

model SocialLinks {
  id       String     @id @default(cuid())
  github   String? // Optional in case it's not always available
  linkedin String?
  email    String?
  website  String?
  User     User?   @relation(fields: [userId], references: [id])
  userId   String?
}

model WorkExperience {
  id        String       @id @default(cuid())
  company   String
  position  String
  startDate DateTime
  endDate   DateTime?
  // description  String[]
  // achievements String[]
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model Education {
  id           String       @id @default(cuid())
  institution  String
  degree       String
  fieldOfStudy String
  startDate    DateTime
  endDate      DateTime?
  User         User?     @relation(fields: [userId], references: [id])
  userId       String?
}

model Skill {
  id               String     @id @default(cuid())
  name             String
  category         String // e.g., "Technical", "Design", etc.
  proficiencyLevel String // e.g., "Advanced", "Intermediate"
  User             User?   @relation(fields: [userId], references: [id])
  userId           String?
}
